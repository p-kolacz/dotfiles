#!/bin/bash

TMPFILE=/tmp/sys_mode
export SYSTEMD_COLORS=true

get-mode() {
	[[ -f $TMPFILE ]] || echo --system > $TMPFILE
	read -r MODE < $TMPFILE
}
list() {
	get-mode
	echo "Mode: $MODE" && systemctl list-units --type=service --all --plain --no-pager --legend=false "$MODE"
}
preview() {
	get-mode
	systemctl status "$MODE" "$1"
}
toggle-mode() {
	get-mode
	if [[ $MODE == "--system" ]]; then
		MODE=--user
	else
		MODE=--system
	fi
	echo $MODE > $TMPFILE
}
toggle-enable() {
	get-mode
	if systemctl is-enabled --quiet "$MODE" "$1" ; then
		systemctl disable "$MODE" "$1"
	else
		systemctl enable "$MODE" "$1"
	fi
}
toggle-run() {
	get-mode
	if systemctl is-active --quiet "$MODE" "$1"; then
		systemctl stop "$MODE" "$1"
	else
		systemctl start "$MODE" "$1"
	fi
}
restart() {
	get-mode
	systemctl restart "$MODE" "$1"
}

browse() {
	local THIS=${0##*/}
	list | fzf																\
		--header-lines=1													\
		--preview="$THIS preview {1}"										\
		--preview-window=top,70%											\
		--bind="ctrl-e:execute($THIS toggle-enable {1})+reload($THIS list)"	\
		--bind="ctrl-s:execute($THIS toggle-run {1})+reload($THIS list)"	\
		--bind="ctrl-r:execute($THIS restart {1})+reload($THIS list)"		\
		--bind="ctrl-u:execute-silent($THIS toggle-mode)+reload($THIS list)"		
}

if [[ $# -eq 0 ]]; then
	browse
elif [[ $(typeset -f "$1") ]]; then
	fun=$1 && shift && $fun "$@"
else
	printf "Usage: ${0##*/} [%s]\n" "$(declare -F | cut -d" " -f3 | tr "\n" "|")"
fi

