extends wordpress

snippet php "php tag" i
<?php $0 ?>
endsnippet

snippet = "" i
<?= $0 ?>
endsnippet

snippet ph "Description" b
<?php
	$0
endsnippet

snippet t "$this->"
$this->
endsnippet

snippet v
function v(&$data)
{
	var_dump($data);
}
endsnippet

snippet display_errors
ini_set('display_errors', '1');
error_reporting(E_ALL);
endsnippet

snippet log_errors_to_file
ini_set("log_errors", 1);
ini_set("error_log", "/home/username/www/php-error.log");
endsnippet

snippet phone_link
function phone_link($phone, $class=false)
{
	$raw = strtr($phone, [' ' => '', '-' => '']);
	return
		"<a href=\"tel:$raw\""
		.($class ? " class=\"$class\"" : '')
		.">$phone</a>";
}
endsnippet

snippet shorten_string
function shorten_string($data, $length = 50)
{
	if(mb_strlen($data) < $length)
		return $data;

	$data = mb_substr($data, 0 , $length);
	$i = mb_strrpos($data, ' ');
	$data = mb_substr($data, 0 , $i);
	return $data.'...';
}
endsnippet

snippet size2bytes
function size2Bytes($size)
{
	if ($s=floor($size/1099511627776))
		return ($s+1).' TiB';
	else if ($s=floor($size/1073741824))
		return ($s+1).' GiB';
	else if ($s=floor($size/1048576))
		return ($s+1).' MiB';
	else if ($s=floor($size/1024))
		return ($s+1).' KiB';
	else
		return $size.' B';
}
endsnippet

snippet cookie_notice
<?php if(!isset($_COOKIE['cookies_accepted'])): ?>
	<div id="cookie-notice">
		<div class="cookie-notice-container">
			<div class="cookie-notice-text">
				Cookie notice text
			</div>
			<button class="cookie-notice-button">Accept</button>
		</div>
	</div>
<?php endif ?>
endsnippet

snippet session_time
ini_set('session.gc_maxlifetime',3000);
endsnippet

snippet slug
function slug($data, $lower = true)
{
	$s='';
	$data=str_replace(array(' ', 'ę', 'ó', 'ą', 'ś', 'ł', 'ż', 'ź', 'ć', 'ń', 'Ę', 'Ó', 'Ą', 'Ś', 'Ł', 'Ż', 'Ź', 'Ć', 'Ń'),
					  array('-', 'e', 'o', 'a', 's', 'l', 'z', 'z', 'c', 'n', 'E', 'O', 'A', 'S', 'L', 'Z', 'Z', 'C', 'N') , $data);
	if ($lower)
		$data=strtolower($data);
	for($i=0; $i<strlen($data); $i++)
	{
		$c=substr($data, $i, 1);
		if (preg_match('/^[a-zA-Z0-9\.\-_]+$/', $c))
			$s .= $c;
	}
	return $s;
}
endsnippet

snippet base64_url
function base64UrlEncode($data)
{
	return strtr(rtrim(base64_encode($data), '='), '+/', '-_');
}

function base64UrlDecode($base64)
{
	return base64_decode(strtr($base64, '-_', '+/'));
}
endsnippet

snippet disable_cache
header("Cache-Control: no-store, no-cache, must-revalidate");
header("Cache-Control: post-check=0, pre-check=0", false);
header("Pragma: no-cache");
endsnippet

snippet download_pdf
$path = "pdf/";
$file = "";
header("Content-type: application/pdf");
header("Content-Disposition: attachment; filename=$file");
readfile("$path/$file");
endsnippet

snippet dump_script
var_dump($_SERVER['PHP_SELF']);
var_dump(dirname($_SERVER['PHP_SELF']));
var_dump($_SERVER['SCRIPT_NAME']);
var_dump(dirname($_SERVER['SCRIPT_NAME']));
var_dump(__FILE__);
var_dump(__DIR__);
endsnippet

################################################################################
# Strings

snippet months_en "Array of months names in english"
[ 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December' ];
endsnippet

snippet kill_pl
$killpl = array('ę'=>'e','ó'=>'o','ą'=>'a','ś'=>'s','ł'=>'l','ż'=>'z','ź'=>'z','ć'=>'c','ń'=>'n');
$file = strtr($page, $killpl);
endsnippet

